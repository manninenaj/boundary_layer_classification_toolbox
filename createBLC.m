function [product, product_attribute] = createBLC(bitfield,fubarfield)

category_bits = bitfield;

% Read bitfield
layer_bit = double(bitand(uint16(category_bits),uint16(1))>0);
epsilon_bit = double(bitand(uint16(category_bits),uint16(2))>0);
contact_bit = double(bitand(uint16(category_bits),uint16(4))>0);
heatflux_bit = double(bitand(uint16(category_bits),uint16(8))>0);
heatfluxabshi_bit = double(bitand(uint16(category_bits),uint16(16))>0);
shear_bit = double(bitand(uint16(category_bits),uint16(32))>0);
incloud_bit = double(bitand(uint16(category_bits),uint16(64))>0);
driven_bit = double(bitand(uint16(category_bits),uint16(128))>0);

%% Decision tree
% Stability
BL_mask = heatflux_bit .* 0;
BL_mask(~heatflux_bit & heatfluxabshi_bit) = 1;
BL_mask(heatflux_bit & heatfluxabshi_bit) = 2;
% Non-turbulent
BL_mask(~epsilon_bit & layer_bit) = 3;
% Turbulent
BL_mask(epsilon_bit & layer_bit) = 3.5;
% Convective mixing
BL_mask(BL_mask == 3.5 & heatflux_bit & heatfluxabshi_bit & contact_bit & layer_bit) = 4;
% In cloud
BL_mask(incloud_bit & layer_bit) = 7;
% Cloud driven
BL_mask(BL_mask == 3.5 & driven_bit == 1 & ~incloud_bit & layer_bit) = 8;
% Wind shear
BL_mask(BL_mask == 3.5 & BL_mask~=4 & BL_mask~=7 & BL_mask~=8 & shear_bit & layer_bit) = 5;
% Decaying / intermittent
BL_mask(BL_mask == 3.5) = 6;

% Create product "boundary layer categorization"
BL_mask(:,1:3) = 0;
BL_mask(:,1:3) = BL_mask(:,end-2:end);
BL_mask(~layer_bit) = 0;
product.bl_classification = int8(BL_mask);

product_attribute.bl_classification.long_name = 'Boundary layer classification';
product_attribute.bl_classification.comment = ...
   ['This variable is a simplification of the bitfield in the boundary layer classification dataset.' 10 ...
    'It provides the main sources of boundary layer mixing that can be distinguished by Doppler lidar and surface stability.' 10 ...
    'The classes are defined in the definition and long_definition attributes.'];

product_attribute.bl_classification.plot_range = [0 10];
product_attribute.bl_classification.dimensions = {'time','height'};
product_attribute.bl_classification.definition = ...
   ['1: Stable/Neutral' 10 ...
    '2: Unstable' 10 ...
    '3: Non-turbulent' 10 ...
    '4: Convective mixing' 10 ...
    '5: Wind shear' 10 ...
    '6: Decaying / intermittent' 10 ...
    '7: In cloud' 10 ...
    '8: Cloud driven' 10];

product_attribute.bl_classification.long_definition = ...
   ['1: Stable/Neutral' 10 ...
    '2: Unstable' 10 ...
    '3: Non-turbulent' 10 ...
    '4: Convective mixing' 10 ...
    '5: Wind shear' 10 ...
    '6: Decaying / intermittent' 10 ...
    '7: In cloud' 10 ...
    '8: Cloud driven' 10];

% [1.0 0.4 0.7 0.4 1.0 0.0 0.0 1.0 0.5 1.0 0.0]
% [1.0 0.4 0.7 0.8 0.2 0.6 0.0 0.9 0.0 0.0 1.0]
% [1.0 0.4 0.7 1.0 0.2 0.6 1.0 0.0 0.5 1.0 0.5]
product_attribute.bl_classification.legend_key_red =   [0.5 1.0 0.4 0.9 0.0 1.0 0.5 1.0];
product_attribute.bl_classification.legend_key_green = [0.5 1.0 0.8 0.0 0.0 0.9 0.0 0.6];
product_attribute.bl_classification.legend_key_blue =  [0.6 1.0 1.0 0.2 1.0 0.2 0.5 0.0];

% Create product "TKE connected with"
TKE_connected = fubarfield;
TKE_connected(:,1:3) = 0;
TKE_connected(~layer_bit) = 0;
product.TKE_connected = int8(TKE_connected);

product_attribute.TKE_connected.long_name = 'Turbulence connected with';
product_attribute.TKE_connected.comment = ...
   [['This variable provides information on the presence of high' ...
   ' turbulence that can be distinguished by Doppler lidar and' ...
   ' whether the turbulence is connected with the surface or clouds.'] 10 ...
    'The classes are defined in the definition and long_definition attributes.'];

product_attribute.TKE_connected.plot_range = [0 10];
product_attribute.TKE_connected.dimensions = {'time','height'};
product_attribute.TKE_connected.definition = ...
   ['1: Non-turbulent' 10 ...
    '2: Connected with surface' 10 ...
    '3: Connected with cloud' 10 ...
    '4: In cloud' 10 ...
    '5: Unconnected' 10];
product_attribute.TKE_connected.long_definition = ...
   ['1: Non-turbulent' 10 ...
    '2: Connected with surface' 10 ...
    '3: Connected with cloud' 10 ...
    '4: In cloud' 10 ...
    '5: Unconnected' 10];

product_attribute.TKE_connected.legend_key_red =   [0.0 1.0 1.0 0.4 1.0];
product_attribute.TKE_connected.legend_key_green = [0.7 1.0 0.8 0.5 0.0];
product_attribute.TKE_connected.legend_key_blue =  [1.0 0.6 0.5 0.6 1.0];
end
